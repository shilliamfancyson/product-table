{"ast":null,"code":"import _inherits from \"/Users/michaelyoung/repos2/product-table/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/michaelyoung/repos2/product-table/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _classCallCheck from \"/Users/michaelyoung/repos2/product-table/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/michaelyoung/repos2/product-table/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport firebase from '@firebase/app-compat';\nimport { ComponentContainer, Provider, Component } from '@firebase/component';\nimport { _validatePathString, onChildMoved, onChildChanged, onChildRemoved, onChildAdded, onValue, off as _off, get as _get, query, limitToFirst as _limitToFirst, limitToLast as _limitToLast, orderByChild as _orderByChild, orderByKey as _orderByKey, orderByPriority as _orderByPriority, orderByValue as _orderByValue, startAt as _startAt, startAfter as _startAfter, endAt as _endAt, endBefore as _endBefore, equalTo as _equalTo, _ReferenceImpl, _QueryImpl, _QueryParams, child as _child, set as _set, _validateWritablePath, update as _update, setWithPriority as _setWithPriority, remove as _remove, runTransaction, setPriority as _setPriority, push as _push, OnDisconnect as OnDisconnect$1, forceWebSockets, forceLongPolling, connectDatabaseEmulator, refFromURL as _refFromURL, ref as _ref, goOffline as _goOffline, goOnline as _goOnline, serverTimestamp, increment as _increment, _setSDKVersion, _repoManagerDatabaseFromApp, enableLogging } from '@firebase/database';\nimport { errorPrefix, validateArgCount, validateCallback, validateContextObject, Deferred } from '@firebase/util';\nimport { Logger } from '@firebase/logger';\nvar name = \"@firebase/database-compat\";\nvar version = \"1.0.1\";\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar logClient = new Logger('@firebase/database-compat');\nvar warn = function warn(msg) {\n  var message = 'FIREBASE WARNING: ' + msg;\n  logClient.warn(message);\n};\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar validateBoolean = function validateBoolean(fnName, argumentName, bool, optional) {\n  if (optional && bool === undefined) {\n    return;\n  }\n  if (typeof bool !== 'boolean') {\n    throw new Error(errorPrefix(fnName, argumentName) + 'must be a boolean.');\n  }\n};\nvar validateEventType = function validateEventType(fnName, eventType, optional) {\n  if (optional && eventType === undefined) {\n    return;\n  }\n  switch (eventType) {\n    case 'value':\n    case 'child_added':\n    case 'child_removed':\n    case 'child_changed':\n    case 'child_moved':\n      break;\n    default:\n      throw new Error(errorPrefix(fnName, 'eventType') + 'must be a valid event type = \"value\", \"child_added\", \"child_removed\", ' + '\"child_changed\", or \"child_moved\".');\n  }\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar OnDisconnect = /*#__PURE__*/function () {\n  function OnDisconnect(_delegate) {\n    _classCallCheck(this, OnDisconnect);\n    this._delegate = _delegate;\n  }\n  _createClass(OnDisconnect, [{\n    key: \"cancel\",\n    value: function cancel(onComplete) {\n      validateArgCount('OnDisconnect.cancel', 0, 1, arguments.length);\n      validateCallback('OnDisconnect.cancel', 'onComplete', onComplete, true);\n      var result = this._delegate.cancel();\n      if (onComplete) {\n        result.then(function () {\n          return onComplete(null);\n        }, function (error) {\n          return onComplete(error);\n        });\n      }\n      return result;\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(onComplete) {\n      validateArgCount('OnDisconnect.remove', 0, 1, arguments.length);\n      validateCallback('OnDisconnect.remove', 'onComplete', onComplete, true);\n      var result = this._delegate.remove();\n      if (onComplete) {\n        result.then(function () {\n          return onComplete(null);\n        }, function (error) {\n          return onComplete(error);\n        });\n      }\n      return result;\n    }\n  }, {\n    key: \"set\",\n    value: function set(value, onComplete) {\n      validateArgCount('OnDisconnect.set', 1, 2, arguments.length);\n      validateCallback('OnDisconnect.set', 'onComplete', onComplete, true);\n      var result = this._delegate.set(value);\n      if (onComplete) {\n        result.then(function () {\n          return onComplete(null);\n        }, function (error) {\n          return onComplete(error);\n        });\n      }\n      return result;\n    }\n  }, {\n    key: \"setWithPriority\",\n    value: function setWithPriority(value, priority, onComplete) {\n      validateArgCount('OnDisconnect.setWithPriority', 2, 3, arguments.length);\n      validateCallback('OnDisconnect.setWithPriority', 'onComplete', onComplete, true);\n      var result = this._delegate.setWithPriority(value, priority);\n      if (onComplete) {\n        result.then(function () {\n          return onComplete(null);\n        }, function (error) {\n          return onComplete(error);\n        });\n      }\n      return result;\n    }\n  }, {\n    key: \"update\",\n    value: function update(objectToMerge, onComplete) {\n      validateArgCount('OnDisconnect.update', 1, 2, arguments.length);\n      if (Array.isArray(objectToMerge)) {\n        var newObjectToMerge = {};\n        for (var i = 0; i < objectToMerge.length; ++i) {\n          newObjectToMerge['' + i] = objectToMerge[i];\n        }\n        objectToMerge = newObjectToMerge;\n        warn('Passing an Array to firebase.database.onDisconnect().update() is deprecated. Use set() if you want to overwrite the ' + 'existing data, or an Object with integer keys if you really do want to only update some of the children.');\n      }\n      validateCallback('OnDisconnect.update', 'onComplete', onComplete, true);\n      var result = this._delegate.update(objectToMerge);\n      if (onComplete) {\n        result.then(function () {\n          return onComplete(null);\n        }, function (error) {\n          return onComplete(error);\n        });\n      }\n      return result;\n    }\n  }]);\n  return OnDisconnect;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar TransactionResult = /*#__PURE__*/function () {\n  /**\r\n   * A type for the resolve value of Firebase.transaction.\r\n   */\n  function TransactionResult(committed, snapshot) {\n    _classCallCheck(this, TransactionResult);\n    this.committed = committed;\n    this.snapshot = snapshot;\n  }\n  // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\n  // for end-users\n  _createClass(TransactionResult, [{\n    key: \"toJSON\",\n    value: function toJSON() {\n      validateArgCount('TransactionResult.toJSON', 0, 1, arguments.length);\n      return {\n        committed: this.committed,\n        snapshot: this.snapshot.toJSON()\n      };\n    }\n  }]);\n  return TransactionResult;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * Class representing a firebase data snapshot.  It wraps a SnapshotNode and\r\n * surfaces the public methods (val, forEach, etc.) we want to expose.\r\n */\nvar DataSnapshot = /*#__PURE__*/function () {\n  function DataSnapshot(_database, _delegate) {\n    _classCallCheck(this, DataSnapshot);\n    this._database = _database;\n    this._delegate = _delegate;\n  }\n  /**\r\n   * Retrieves the snapshot contents as JSON.  Returns null if the snapshot is\r\n   * empty.\r\n   *\r\n   * @returns JSON representation of the DataSnapshot contents, or null if empty.\r\n   */\n  _createClass(DataSnapshot, [{\n    key: \"val\",\n    value: function val() {\n      validateArgCount('DataSnapshot.val', 0, 0, arguments.length);\n      return this._delegate.val();\n    }\n    /**\r\n     * Returns the snapshot contents as JSON, including priorities of node.  Suitable for exporting\r\n     * the entire node contents.\r\n     * @returns JSON representation of the DataSnapshot contents, or null if empty.\r\n     */\n  }, {\n    key: \"exportVal\",\n    value: function exportVal() {\n      validateArgCount('DataSnapshot.exportVal', 0, 0, arguments.length);\n      return this._delegate.exportVal();\n    }\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\n    // for end-users\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      // Optional spacer argument is unnecessary because we're depending on recursion rather than stringifying the content\n      validateArgCount('DataSnapshot.toJSON', 0, 1, arguments.length);\n      return this._delegate.toJSON();\n    }\n    /**\r\n     * Returns whether the snapshot contains a non-null value.\r\n     *\r\n     * @returns Whether the snapshot contains a non-null value, or is empty.\r\n     */\n  }, {\n    key: \"exists\",\n    value: function exists() {\n      validateArgCount('DataSnapshot.exists', 0, 0, arguments.length);\n      return this._delegate.exists();\n    }\n    /**\r\n     * Returns a DataSnapshot of the specified child node's contents.\r\n     *\r\n     * @param path - Path to a child.\r\n     * @returns DataSnapshot for child node.\r\n     */\n  }, {\n    key: \"child\",\n    value: function child(path) {\n      validateArgCount('DataSnapshot.child', 0, 1, arguments.length);\n      // Ensure the childPath is a string (can be a number)\n      path = String(path);\n      _validatePathString('DataSnapshot.child', 'path', path, false);\n      return new DataSnapshot(this._database, this._delegate.child(path));\n    }\n    /**\r\n     * Returns whether the snapshot contains a child at the specified path.\r\n     *\r\n     * @param path - Path to a child.\r\n     * @returns Whether the child exists.\r\n     */\n  }, {\n    key: \"hasChild\",\n    value: function hasChild(path) {\n      validateArgCount('DataSnapshot.hasChild', 1, 1, arguments.length);\n      _validatePathString('DataSnapshot.hasChild', 'path', path, false);\n      return this._delegate.hasChild(path);\n    }\n    /**\r\n     * Returns the priority of the object, or null if no priority was set.\r\n     *\r\n     * @returns The priority.\r\n     */\n  }, {\n    key: \"getPriority\",\n    value: function getPriority() {\n      validateArgCount('DataSnapshot.getPriority', 0, 0, arguments.length);\n      return this._delegate.priority;\n    }\n    /**\r\n     * Iterates through child nodes and calls the specified action for each one.\r\n     *\r\n     * @param action - Callback function to be called\r\n     * for each child.\r\n     * @returns True if forEach was canceled by action returning true for\r\n     * one of the child nodes.\r\n     */\n  }, {\n    key: \"forEach\",\n    value: function forEach(action) {\n      var _this = this;\n      validateArgCount('DataSnapshot.forEach', 1, 1, arguments.length);\n      validateCallback('DataSnapshot.forEach', 'action', action, false);\n      return this._delegate.forEach(function (expDataSnapshot) {\n        return action(new DataSnapshot(_this._database, expDataSnapshot));\n      });\n    }\n    /**\r\n     * Returns whether this DataSnapshot has children.\r\n     * @returns True if the DataSnapshot contains 1 or more child nodes.\r\n     */\n  }, {\n    key: \"hasChildren\",\n    value: function hasChildren() {\n      validateArgCount('DataSnapshot.hasChildren', 0, 0, arguments.length);\n      return this._delegate.hasChildren();\n    }\n  }, {\n    key: \"key\",\n    get: function get() {\n      return this._delegate.key;\n    }\n    /**\r\n     * Returns the number of children for this DataSnapshot.\r\n     * @returns The number of children that this DataSnapshot contains.\r\n     */\n  }, {\n    key: \"numChildren\",\n    value: function numChildren() {\n      validateArgCount('DataSnapshot.numChildren', 0, 0, arguments.length);\n      return this._delegate.size;\n    }\n    /**\r\n     * @returns The Firebase reference for the location this snapshot's data came\r\n     * from.\r\n     */\n  }, {\n    key: \"getRef\",\n    value: function getRef() {\n      validateArgCount('DataSnapshot.ref', 0, 0, arguments.length);\n      return new Reference(this._database, this._delegate.ref);\n    }\n  }, {\n    key: \"ref\",\n    get: function get() {\n      return this.getRef();\n    }\n  }]);\n  return DataSnapshot;\n}();\n/**\r\n * A Query represents a filter to be applied to a firebase location.  This object purely represents the\r\n * query expression (and exposes our public API to build the query).  The actual query logic is in ViewBase.js.\r\n *\r\n * Since every Firebase reference is a query, Firebase inherits from this object.\r\n */\nvar Query = /*#__PURE__*/function () {\n  function Query(database, _delegate) {\n    _classCallCheck(this, Query);\n    this.database = database;\n    this._delegate = _delegate;\n  }\n  _createClass(Query, [{\n    key: \"on\",\n    value: function on(eventType, callback, cancelCallbackOrContext, context) {\n      var _this2 = this;\n      var _a;\n      validateArgCount('Query.on', 2, 4, arguments.length);\n      validateCallback('Query.on', 'callback', callback, false);\n      var ret = Query.getCancelAndContextArgs_('Query.on', cancelCallbackOrContext, context);\n      var valueCallback = function valueCallback(expSnapshot, previousChildName) {\n        callback.call(ret.context, new DataSnapshot(_this2.database, expSnapshot), previousChildName);\n      };\n      valueCallback.userCallback = callback;\n      valueCallback.context = ret.context;\n      var cancelCallback = (_a = ret.cancel) === null || _a === void 0 ? void 0 : _a.bind(ret.context);\n      switch (eventType) {\n        case 'value':\n          onValue(this._delegate, valueCallback, cancelCallback);\n          return callback;\n        case 'child_added':\n          onChildAdded(this._delegate, valueCallback, cancelCallback);\n          return callback;\n        case 'child_removed':\n          onChildRemoved(this._delegate, valueCallback, cancelCallback);\n          return callback;\n        case 'child_changed':\n          onChildChanged(this._delegate, valueCallback, cancelCallback);\n          return callback;\n        case 'child_moved':\n          onChildMoved(this._delegate, valueCallback, cancelCallback);\n          return callback;\n        default:\n          throw new Error(errorPrefix('Query.on', 'eventType') + 'must be a valid event type = \"value\", \"child_added\", \"child_removed\", ' + '\"child_changed\", or \"child_moved\".');\n      }\n    }\n  }, {\n    key: \"off\",\n    value: function off(eventType, callback, context) {\n      validateArgCount('Query.off', 0, 3, arguments.length);\n      validateEventType('Query.off', eventType, true);\n      validateCallback('Query.off', 'callback', callback, true);\n      validateContextObject('Query.off', 'context', context, true);\n      if (callback) {\n        var valueCallback = function valueCallback() {};\n        valueCallback.userCallback = callback;\n        valueCallback.context = context;\n        _off(this._delegate, eventType, valueCallback);\n      } else {\n        _off(this._delegate, eventType);\n      }\n    }\n    /**\r\n     * Get the server-value for this query, or return a cached value if not connected.\r\n     */\n  }, {\n    key: \"get\",\n    value: function get() {\n      var _this3 = this;\n      return _get(this._delegate).then(function (expSnapshot) {\n        return new DataSnapshot(_this3.database, expSnapshot);\n      });\n    }\n    /**\r\n     * Attaches a listener, waits for the first event, and then removes the listener\r\n     */\n  }, {\n    key: \"once\",\n    value: function once(eventType, callback, failureCallbackOrContext, context) {\n      var _this4 = this;\n      validateArgCount('Query.once', 1, 4, arguments.length);\n      validateCallback('Query.once', 'callback', callback, true);\n      var ret = Query.getCancelAndContextArgs_('Query.once', failureCallbackOrContext, context);\n      var deferred = new Deferred();\n      var valueCallback = function valueCallback(expSnapshot, previousChildName) {\n        var result = new DataSnapshot(_this4.database, expSnapshot);\n        if (callback) {\n          callback.call(ret.context, result, previousChildName);\n        }\n        deferred.resolve(result);\n      };\n      valueCallback.userCallback = callback;\n      valueCallback.context = ret.context;\n      var cancelCallback = function cancelCallback(error) {\n        if (ret.cancel) {\n          ret.cancel.call(ret.context, error);\n        }\n        deferred.reject(error);\n      };\n      switch (eventType) {\n        case 'value':\n          onValue(this._delegate, valueCallback, cancelCallback, {\n            onlyOnce: true\n          });\n          break;\n        case 'child_added':\n          onChildAdded(this._delegate, valueCallback, cancelCallback, {\n            onlyOnce: true\n          });\n          break;\n        case 'child_removed':\n          onChildRemoved(this._delegate, valueCallback, cancelCallback, {\n            onlyOnce: true\n          });\n          break;\n        case 'child_changed':\n          onChildChanged(this._delegate, valueCallback, cancelCallback, {\n            onlyOnce: true\n          });\n          break;\n        case 'child_moved':\n          onChildMoved(this._delegate, valueCallback, cancelCallback, {\n            onlyOnce: true\n          });\n          break;\n        default:\n          throw new Error(errorPrefix('Query.once', 'eventType') + 'must be a valid event type = \"value\", \"child_added\", \"child_removed\", ' + '\"child_changed\", or \"child_moved\".');\n      }\n      return deferred.promise;\n    }\n    /**\r\n     * Set a limit and anchor it to the start of the window.\r\n     */\n  }, {\n    key: \"limitToFirst\",\n    value: function limitToFirst(limit) {\n      validateArgCount('Query.limitToFirst', 1, 1, arguments.length);\n      return new Query(this.database, query(this._delegate, _limitToFirst(limit)));\n    }\n    /**\r\n     * Set a limit and anchor it to the end of the window.\r\n     */\n  }, {\n    key: \"limitToLast\",\n    value: function limitToLast(limit) {\n      validateArgCount('Query.limitToLast', 1, 1, arguments.length);\n      return new Query(this.database, query(this._delegate, _limitToLast(limit)));\n    }\n    /**\r\n     * Given a child path, return a new query ordered by the specified grandchild path.\r\n     */\n  }, {\n    key: \"orderByChild\",\n    value: function orderByChild(path) {\n      validateArgCount('Query.orderByChild', 1, 1, arguments.length);\n      return new Query(this.database, query(this._delegate, _orderByChild(path)));\n    }\n    /**\r\n     * Return a new query ordered by the KeyIndex\r\n     */\n  }, {\n    key: \"orderByKey\",\n    value: function orderByKey() {\n      validateArgCount('Query.orderByKey', 0, 0, arguments.length);\n      return new Query(this.database, query(this._delegate, _orderByKey()));\n    }\n    /**\r\n     * Return a new query ordered by the PriorityIndex\r\n     */\n  }, {\n    key: \"orderByPriority\",\n    value: function orderByPriority() {\n      validateArgCount('Query.orderByPriority', 0, 0, arguments.length);\n      return new Query(this.database, query(this._delegate, _orderByPriority()));\n    }\n    /**\r\n     * Return a new query ordered by the ValueIndex\r\n     */\n  }, {\n    key: \"orderByValue\",\n    value: function orderByValue() {\n      validateArgCount('Query.orderByValue', 0, 0, arguments.length);\n      return new Query(this.database, query(this._delegate, _orderByValue()));\n    }\n  }, {\n    key: \"startAt\",\n    value: function startAt() {\n      var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      var name = arguments.length > 1 ? arguments[1] : undefined;\n      validateArgCount('Query.startAt', 0, 2, arguments.length);\n      return new Query(this.database, query(this._delegate, _startAt(value, name)));\n    }\n  }, {\n    key: \"startAfter\",\n    value: function startAfter() {\n      var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      var name = arguments.length > 1 ? arguments[1] : undefined;\n      validateArgCount('Query.startAfter', 0, 2, arguments.length);\n      return new Query(this.database, query(this._delegate, _startAfter(value, name)));\n    }\n  }, {\n    key: \"endAt\",\n    value: function endAt() {\n      var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      var name = arguments.length > 1 ? arguments[1] : undefined;\n      validateArgCount('Query.endAt', 0, 2, arguments.length);\n      return new Query(this.database, query(this._delegate, _endAt(value, name)));\n    }\n  }, {\n    key: \"endBefore\",\n    value: function endBefore() {\n      var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      var name = arguments.length > 1 ? arguments[1] : undefined;\n      validateArgCount('Query.endBefore', 0, 2, arguments.length);\n      return new Query(this.database, query(this._delegate, _endBefore(value, name)));\n    }\n    /**\r\n     * Load the selection of children with exactly the specified value, and, optionally,\r\n     * the specified name.\r\n     */\n  }, {\n    key: \"equalTo\",\n    value: function equalTo(value, name) {\n      validateArgCount('Query.equalTo', 1, 2, arguments.length);\n      return new Query(this.database, query(this._delegate, _equalTo(value, name)));\n    }\n    /**\r\n     * @returns URL for this location.\r\n     */\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      validateArgCount('Query.toString', 0, 0, arguments.length);\n      return this._delegate.toString();\n    }\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\n    // for end-users.\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      // An optional spacer argument is unnecessary for a string.\n      validateArgCount('Query.toJSON', 0, 1, arguments.length);\n      return this._delegate.toJSON();\n    }\n    /**\r\n     * Return true if this query and the provided query are equivalent; otherwise, return false.\r\n     */\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(other) {\n      validateArgCount('Query.isEqual', 1, 1, arguments.length);\n      if (!(other instanceof Query)) {\n        var error = 'Query.isEqual failed: First argument must be an instance of firebase.database.Query.';\n        throw new Error(error);\n      }\n      return this._delegate.isEqual(other._delegate);\n    }\n    /**\r\n     * Helper used by .on and .once to extract the context and or cancel arguments.\r\n     * @param fnName - The function name (on or once)\r\n     *\r\n     */\n  }, {\n    key: \"ref\",\n    get: function get() {\n      return new Reference(this.database, new _ReferenceImpl(this._delegate._repo, this._delegate._path));\n    }\n  }], [{\n    key: \"getCancelAndContextArgs_\",\n    value: function getCancelAndContextArgs_(fnName, cancelOrContext, context) {\n      var ret = {\n        cancel: undefined,\n        context: undefined\n      };\n      if (cancelOrContext && context) {\n        ret.cancel = cancelOrContext;\n        validateCallback(fnName, 'cancel', ret.cancel, true);\n        ret.context = context;\n        validateContextObject(fnName, 'context', ret.context, true);\n      } else if (cancelOrContext) {\n        // we have either a cancel callback or a context.\n        if (typeof cancelOrContext === 'object' && cancelOrContext !== null) {\n          // it's a context!\n          ret.context = cancelOrContext;\n        } else if (typeof cancelOrContext === 'function') {\n          ret.cancel = cancelOrContext;\n        } else {\n          throw new Error(errorPrefix(fnName, 'cancelOrContext') + ' must either be a cancel callback or a context object.');\n        }\n      }\n      return ret;\n    }\n  }]);\n  return Query;\n}();\nvar Reference = /*#__PURE__*/function (_Query) {\n  _inherits(Reference, _Query);\n  var _super = _createSuper(Reference);\n  /**\r\n   * Call options:\r\n   *   new Reference(Repo, Path) or\r\n   *   new Reference(url: string, string|RepoManager)\r\n   *\r\n   * Externally - this is the firebase.database.Reference type.\r\n   */\n  function Reference(database, _delegate) {\n    var _this5;\n    _classCallCheck(this, Reference);\n    _this5 = _super.call(this, database, new _QueryImpl(_delegate._repo, _delegate._path, new _QueryParams(), false));\n    _this5.database = database;\n    _this5._delegate = _delegate;\n    return _this5;\n  }\n  /** @returns {?string} */\n  _createClass(Reference, [{\n    key: \"getKey\",\n    value: function getKey() {\n      validateArgCount('Reference.key', 0, 0, arguments.length);\n      return this._delegate.key;\n    }\n  }, {\n    key: \"child\",\n    value: function child(pathString) {\n      validateArgCount('Reference.child', 1, 1, arguments.length);\n      if (typeof pathString === 'number') {\n        pathString = String(pathString);\n      }\n      return new Reference(this.database, _child(this._delegate, pathString));\n    }\n    /** @returns {?Reference} */\n  }, {\n    key: \"getParent\",\n    value: function getParent() {\n      validateArgCount('Reference.parent', 0, 0, arguments.length);\n      var parent = this._delegate.parent;\n      return parent ? new Reference(this.database, parent) : null;\n    }\n    /** @returns {!Reference} */\n  }, {\n    key: \"getRoot\",\n    value: function getRoot() {\n      validateArgCount('Reference.root', 0, 0, arguments.length);\n      return new Reference(this.database, this._delegate.root);\n    }\n  }, {\n    key: \"set\",\n    value: function set(newVal, onComplete) {\n      validateArgCount('Reference.set', 1, 2, arguments.length);\n      validateCallback('Reference.set', 'onComplete', onComplete, true);\n      var result = _set(this._delegate, newVal);\n      if (onComplete) {\n        result.then(function () {\n          return onComplete(null);\n        }, function (error) {\n          return onComplete(error);\n        });\n      }\n      return result;\n    }\n  }, {\n    key: \"update\",\n    value: function update(values, onComplete) {\n      validateArgCount('Reference.update', 1, 2, arguments.length);\n      if (Array.isArray(values)) {\n        var newObjectToMerge = {};\n        for (var i = 0; i < values.length; ++i) {\n          newObjectToMerge['' + i] = values[i];\n        }\n        values = newObjectToMerge;\n        warn('Passing an Array to Firebase.update() is deprecated. ' + 'Use set() if you want to overwrite the existing data, or ' + 'an Object with integer keys if you really do want to ' + 'only update some of the children.');\n      }\n      _validateWritablePath('Reference.update', this._delegate._path);\n      validateCallback('Reference.update', 'onComplete', onComplete, true);\n      var result = _update(this._delegate, values);\n      if (onComplete) {\n        result.then(function () {\n          return onComplete(null);\n        }, function (error) {\n          return onComplete(error);\n        });\n      }\n      return result;\n    }\n  }, {\n    key: \"setWithPriority\",\n    value: function setWithPriority(newVal, newPriority, onComplete) {\n      validateArgCount('Reference.setWithPriority', 2, 3, arguments.length);\n      validateCallback('Reference.setWithPriority', 'onComplete', onComplete, true);\n      var result = _setWithPriority(this._delegate, newVal, newPriority);\n      if (onComplete) {\n        result.then(function () {\n          return onComplete(null);\n        }, function (error) {\n          return onComplete(error);\n        });\n      }\n      return result;\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(onComplete) {\n      validateArgCount('Reference.remove', 0, 1, arguments.length);\n      validateCallback('Reference.remove', 'onComplete', onComplete, true);\n      var result = _remove(this._delegate);\n      if (onComplete) {\n        result.then(function () {\n          return onComplete(null);\n        }, function (error) {\n          return onComplete(error);\n        });\n      }\n      return result;\n    }\n  }, {\n    key: \"transaction\",\n    value: function transaction(transactionUpdate, onComplete, applyLocally) {\n      var _this6 = this;\n      validateArgCount('Reference.transaction', 1, 3, arguments.length);\n      validateCallback('Reference.transaction', 'transactionUpdate', transactionUpdate, false);\n      validateCallback('Reference.transaction', 'onComplete', onComplete, true);\n      validateBoolean('Reference.transaction', 'applyLocally', applyLocally, true);\n      var result = runTransaction(this._delegate, transactionUpdate, {\n        applyLocally: applyLocally\n      }).then(function (transactionResult) {\n        return new TransactionResult(transactionResult.committed, new DataSnapshot(_this6.database, transactionResult.snapshot));\n      });\n      if (onComplete) {\n        result.then(function (transactionResult) {\n          return onComplete(null, transactionResult.committed, transactionResult.snapshot);\n        }, function (error) {\n          return onComplete(error, false, null);\n        });\n      }\n      return result;\n    }\n  }, {\n    key: \"setPriority\",\n    value: function setPriority(priority, onComplete) {\n      validateArgCount('Reference.setPriority', 1, 2, arguments.length);\n      validateCallback('Reference.setPriority', 'onComplete', onComplete, true);\n      var result = _setPriority(this._delegate, priority);\n      if (onComplete) {\n        result.then(function () {\n          return onComplete(null);\n        }, function (error) {\n          return onComplete(error);\n        });\n      }\n      return result;\n    }\n  }, {\n    key: \"push\",\n    value: function push(value, onComplete) {\n      var _this7 = this;\n      validateArgCount('Reference.push', 0, 2, arguments.length);\n      validateCallback('Reference.push', 'onComplete', onComplete, true);\n      var expPromise = _push(this._delegate, value);\n      var promise = expPromise.then(function (expRef) {\n        return new Reference(_this7.database, expRef);\n      });\n      if (onComplete) {\n        promise.then(function () {\n          return onComplete(null);\n        }, function (error) {\n          return onComplete(error);\n        });\n      }\n      var result = new Reference(this.database, expPromise);\n      result.then = promise.then.bind(promise);\n      result.catch = promise.catch.bind(promise, undefined);\n      return result;\n    }\n  }, {\n    key: \"onDisconnect\",\n    value: function onDisconnect() {\n      _validateWritablePath('Reference.onDisconnect', this._delegate._path);\n      return new OnDisconnect(new OnDisconnect$1(this._delegate._repo, this._delegate._path));\n    }\n  }, {\n    key: \"key\",\n    get: function get() {\n      return this.getKey();\n    }\n  }, {\n    key: \"parent\",\n    get: function get() {\n      return this.getParent();\n    }\n  }, {\n    key: \"root\",\n    get: function get() {\n      return this.getRoot();\n    }\n  }]);\n  return Reference;\n}(Query);\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * Class representing a firebase database.\r\n */\nvar Database = /*#__PURE__*/function () {\n  /**\r\n   * The constructor should not be called by users of our public API.\r\n   */\n  function Database(_delegate, app) {\n    var _this8 = this;\n    _classCallCheck(this, Database);\n    this._delegate = _delegate;\n    this.app = app;\n    this.INTERNAL = {\n      delete: function _delete() {\n        return _this8._delegate._delete();\n      },\n      forceWebSockets: forceWebSockets,\n      forceLongPolling: forceLongPolling\n    };\n  }\n  /**\r\n   * Modify this instance to communicate with the Realtime Database emulator.\r\n   *\r\n   * <p>Note: This method must be called before performing any other operation.\r\n   *\r\n   * @param host - the emulator host (ex: localhost)\r\n   * @param port - the emulator port (ex: 8080)\r\n   * @param options.mockUserToken - the mock auth token to use for unit testing Security Rules\r\n   */\n  _createClass(Database, [{\n    key: \"useEmulator\",\n    value: function useEmulator(host, port) {\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      connectDatabaseEmulator(this._delegate, host, port, options);\n    }\n  }, {\n    key: \"ref\",\n    value: function ref(path) {\n      validateArgCount('database.ref', 0, 1, arguments.length);\n      if (path instanceof Reference) {\n        var childRef = _refFromURL(this._delegate, path.toString());\n        return new Reference(this, childRef);\n      } else {\n        var _childRef = _ref(this._delegate, path);\n        return new Reference(this, _childRef);\n      }\n    }\n    /**\r\n     * Returns a reference to the root or the path specified in url.\r\n     * We throw a exception if the url is not in the same domain as the\r\n     * current repo.\r\n     * @returns Firebase reference.\r\n     */\n  }, {\n    key: \"refFromURL\",\n    value: function refFromURL(url) {\n      var apiName = 'database.refFromURL';\n      validateArgCount(apiName, 1, 1, arguments.length);\n      var childRef = _refFromURL(this._delegate, url);\n      return new Reference(this, childRef);\n    }\n    // Make individual repo go offline.\n  }, {\n    key: \"goOffline\",\n    value: function goOffline() {\n      validateArgCount('database.goOffline', 0, 0, arguments.length);\n      return _goOffline(this._delegate);\n    }\n  }, {\n    key: \"goOnline\",\n    value: function goOnline() {\n      validateArgCount('database.goOnline', 0, 0, arguments.length);\n      return _goOnline(this._delegate);\n    }\n  }]);\n  return Database;\n}();\nDatabase.ServerValue = {\n  TIMESTAMP: serverTimestamp(),\n  increment: function increment(delta) {\n    return _increment(delta);\n  }\n};\n\n/**\r\n * Used by console to create a database based on the app,\r\n * passed database URL and a custom auth implementation.\r\n *\r\n * @param app - A valid FirebaseApp-like object\r\n * @param url - A valid Firebase databaseURL\r\n * @param version - custom version e.g. firebase-admin version\r\n * @param customAuthImpl - custom auth implementation\r\n */\nfunction initStandalone(_ref2) {\n  var app = _ref2.app,\n    url = _ref2.url,\n    version = _ref2.version,\n    customAuthImpl = _ref2.customAuthImpl,\n    customAppCheckImpl = _ref2.customAppCheckImpl,\n    namespace = _ref2.namespace,\n    _ref2$nodeAdmin = _ref2.nodeAdmin,\n    nodeAdmin = _ref2$nodeAdmin === void 0 ? false : _ref2$nodeAdmin;\n  _setSDKVersion(version);\n  var container = new ComponentContainer('database-standalone');\n  /**\r\n   * ComponentContainer('database-standalone') is just a placeholder that doesn't perform\r\n   * any actual function.\r\n   */\n  var authProvider = new Provider('auth-internal', container);\n  authProvider.setComponent(new Component('auth-internal', function () {\n    return customAuthImpl;\n  }, \"PRIVATE\" /* ComponentType.PRIVATE */));\n  var appCheckProvider = undefined;\n  if (customAppCheckImpl) {\n    appCheckProvider = new Provider('app-check-internal', container);\n    appCheckProvider.setComponent(new Component('app-check-internal', function () {\n      return customAppCheckImpl;\n    }, \"PRIVATE\" /* ComponentType.PRIVATE */));\n  }\n\n  return {\n    instance: new Database(_repoManagerDatabaseFromApp(app, authProvider, appCheckProvider, url, nodeAdmin), app),\n    namespace: namespace\n  };\n}\nvar INTERNAL = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  initStandalone: initStandalone\n});\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar ServerValue = Database.ServerValue;\nfunction registerDatabase(instance) {\n  // Register the Database Service with the 'firebase' namespace.\n  instance.INTERNAL.registerComponent(new Component('database-compat', function (container, _ref3) {\n    var url = _ref3.instanceIdentifier;\n    /* Dependencies */\n    // getImmediate for FirebaseApp will always succeed\n    var app = container.getProvider('app-compat').getImmediate();\n    var databaseExp = container.getProvider('database').getImmediate({\n      identifier: url\n    });\n    return new Database(databaseExp, app);\n  }, \"PUBLIC\" /* ComponentType.PUBLIC */).setServiceProps(\n  // firebase.database namespace properties\n  {\n    Reference: Reference,\n    Query: Query,\n    Database: Database,\n    DataSnapshot: DataSnapshot,\n    enableLogging: enableLogging,\n    INTERNAL: INTERNAL,\n    ServerValue: ServerValue\n  }).setMultipleInstances(true));\n  instance.registerVersion(name, version);\n}\nregisterDatabase(firebase);\nexport { registerDatabase };","map":{"version":3,"names":["logClient","Logger","warn","msg","message","validateBoolean","fnName","argumentName","bool","optional","undefined","Error","errorPrefix","validateEventType","eventType","OnDisconnect","_delegate","_classCallCheck","_createClass","key","value","cancel","onComplete","validateArgCount","arguments","length","validateCallback","result","then","error","remove","set","setWithPriority","priority","update","objectToMerge","Array","isArray","newObjectToMerge","i","TransactionResult","committed","snapshot","toJSON","DataSnapshot","_database","val","exportVal","exists","child","path","String","_validatePathString","hasChild","getPriority","forEach","action","_this","expDataSnapshot","hasChildren","get","numChildren","size","getRef","Reference","ref","Query","database","on","callback","cancelCallbackOrContext","context","_this2","ret","getCancelAndContextArgs_","valueCallback","expSnapshot","previousChildName","call","userCallback","cancelCallback","_a","bind","onValue","onChildAdded","onChildRemoved","onChildChanged","onChildMoved","off","validateContextObject","_this3","once","failureCallbackOrContext","_this4","deferred","Deferred","resolve","reject","onlyOnce","promise","limitToFirst","limit","query","limitToLast","orderByChild","orderByKey","orderByPriority","orderByValue","startAt","name","startAfter","endAt","endBefore","equalTo","toString","isEqual","other","_ReferenceImpl","_repo","_path","cancelOrContext","_Query","_inherits","_super","_createSuper","_this5","_QueryImpl","_QueryParams","getKey","pathString","getParent","parent","getRoot","root","newVal","values","_validateWritablePath","newPriority","transaction","transactionUpdate","applyLocally","_this6","runTransaction","transactionResult","setPriority","push","_this7","expPromise","expRef","catch","onDisconnect","OnDisconnect$1","Database","app","_this8","INTERNAL","delete","_delete","forceWebSockets","forceLongPolling","useEmulator","host","port","options","connectDatabaseEmulator","childRef","refFromURL","url","apiName","goOffline","goOnline","ServerValue","TIMESTAMP","serverTimestamp","increment","delta","initStandalone","_ref2","version","customAuthImpl","customAppCheckImpl","namespace","_ref2$nodeAdmin","nodeAdmin","_setSDKVersion","container","ComponentContainer","authProvider","Provider","setComponent","Component","appCheckProvider","instance","_repoManagerDatabaseFromApp","registerDatabase","registerComponent","_ref3","instanceIdentifier","getProvider","getImmediate","databaseExp","identifier","setServiceProps","enableLogging","setMultipleInstances","registerVersion","firebase"],"sources":["/Users/michaelyoung/repos2/product-table/node_modules/@firebase/database-compat/src/util/util.ts","/Users/michaelyoung/repos2/product-table/node_modules/@firebase/database-compat/src/util/validation.ts","/Users/michaelyoung/repos2/product-table/node_modules/@firebase/database-compat/src/api/onDisconnect.ts","/Users/michaelyoung/repos2/product-table/node_modules/@firebase/database-compat/src/api/TransactionResult.ts","/Users/michaelyoung/repos2/product-table/node_modules/@firebase/database-compat/src/api/Reference.ts","/Users/michaelyoung/repos2/product-table/node_modules/@firebase/database-compat/src/api/Database.ts","/Users/michaelyoung/repos2/product-table/node_modules/@firebase/database-compat/src/api/internal.ts","/Users/michaelyoung/repos2/product-table/node_modules/@firebase/database-compat/src/index.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger } from '@firebase/logger';\n\nconst logClient = new Logger('@firebase/database-compat');\n\nexport const warn = function (msg: string) {\n  const message = 'FIREBASE WARNING: ' + msg;\n  logClient.warn(message);\n};\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { errorPrefix as errorPrefixFxn } from '@firebase/util';\n\nexport const validateBoolean = function (\n  fnName: string,\n  argumentName: string,\n  bool: unknown,\n  optional: boolean\n) {\n  if (optional && bool === undefined) {\n    return;\n  }\n  if (typeof bool !== 'boolean') {\n    throw new Error(\n      errorPrefixFxn(fnName, argumentName) + 'must be a boolean.'\n    );\n  }\n};\n\nexport const validateEventType = function (\n  fnName: string,\n  eventType: string,\n  optional: boolean\n) {\n  if (optional && eventType === undefined) {\n    return;\n  }\n\n  switch (eventType) {\n    case 'value':\n    case 'child_added':\n    case 'child_removed':\n    case 'child_changed':\n    case 'child_moved':\n      break;\n    default:\n      throw new Error(\n        errorPrefixFxn(fnName, 'eventType') +\n          'must be a valid event type = \"value\", \"child_added\", \"child_removed\", ' +\n          '\"child_changed\", or \"child_moved\".'\n      );\n  }\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { OnDisconnect as ModularOnDisconnect } from '@firebase/database';\nimport { validateArgCount, validateCallback, Compat } from '@firebase/util';\n\nimport { warn } from '../util/util';\nexport class OnDisconnect implements Compat<ModularOnDisconnect> {\n  constructor(readonly _delegate: ModularOnDisconnect) {}\n\n  cancel(onComplete?: (a: Error | null) => void): Promise<void> {\n    validateArgCount('OnDisconnect.cancel', 0, 1, arguments.length);\n    validateCallback('OnDisconnect.cancel', 'onComplete', onComplete, true);\n    const result = this._delegate.cancel();\n    if (onComplete) {\n      result.then(\n        () => onComplete(null),\n        error => onComplete(error)\n      );\n    }\n    return result;\n  }\n\n  remove(onComplete?: (a: Error | null) => void): Promise<void> {\n    validateArgCount('OnDisconnect.remove', 0, 1, arguments.length);\n    validateCallback('OnDisconnect.remove', 'onComplete', onComplete, true);\n    const result = this._delegate.remove();\n    if (onComplete) {\n      result.then(\n        () => onComplete(null),\n        error => onComplete(error)\n      );\n    }\n    return result;\n  }\n\n  set(value: unknown, onComplete?: (a: Error | null) => void): Promise<void> {\n    validateArgCount('OnDisconnect.set', 1, 2, arguments.length);\n    validateCallback('OnDisconnect.set', 'onComplete', onComplete, true);\n    const result = this._delegate.set(value);\n    if (onComplete) {\n      result.then(\n        () => onComplete(null),\n        error => onComplete(error)\n      );\n    }\n    return result;\n  }\n\n  setWithPriority(\n    value: unknown,\n    priority: number | string | null,\n    onComplete?: (a: Error | null) => void\n  ): Promise<void> {\n    validateArgCount('OnDisconnect.setWithPriority', 2, 3, arguments.length);\n    validateCallback(\n      'OnDisconnect.setWithPriority',\n      'onComplete',\n      onComplete,\n      true\n    );\n    const result = this._delegate.setWithPriority(value, priority);\n    if (onComplete) {\n      result.then(\n        () => onComplete(null),\n        error => onComplete(error)\n      );\n    }\n    return result;\n  }\n\n  update(\n    objectToMerge: Record<string, unknown>,\n    onComplete?: (a: Error | null) => void\n  ): Promise<void> {\n    validateArgCount('OnDisconnect.update', 1, 2, arguments.length);\n    if (Array.isArray(objectToMerge)) {\n      const newObjectToMerge: { [k: string]: unknown } = {};\n      for (let i = 0; i < objectToMerge.length; ++i) {\n        newObjectToMerge['' + i] = objectToMerge[i];\n      }\n      objectToMerge = newObjectToMerge;\n      warn(\n        'Passing an Array to firebase.database.onDisconnect().update() is deprecated. Use set() if you want to overwrite the ' +\n          'existing data, or an Object with integer keys if you really do want to only update some of the children.'\n      );\n    }\n    validateCallback('OnDisconnect.update', 'onComplete', onComplete, true);\n    const result = this._delegate.update(objectToMerge);\n    if (onComplete) {\n      result.then(\n        () => onComplete(null),\n        error => onComplete(error)\n      );\n    }\n    return result;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { validateArgCount } from '@firebase/util';\n\nimport { DataSnapshot } from './Reference';\n\nexport class TransactionResult {\n  /**\n   * A type for the resolve value of Firebase.transaction.\n   */\n  constructor(public committed: boolean, public snapshot: DataSnapshot) {}\n\n  // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\n  // for end-users\n  toJSON(): object {\n    validateArgCount('TransactionResult.toJSON', 0, 1, arguments.length);\n    return { committed: this.committed, snapshot: this.snapshot.toJSON() };\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  OnDisconnect as ModularOnDisconnect,\n  off,\n  onChildAdded,\n  onChildChanged,\n  onChildMoved,\n  onChildRemoved,\n  onValue,\n  EventType,\n  limitToFirst,\n  query,\n  limitToLast,\n  orderByChild,\n  orderByKey,\n  orderByValue,\n  orderByPriority,\n  startAt,\n  startAfter,\n  endAt,\n  endBefore,\n  equalTo,\n  get,\n  set,\n  update,\n  setWithPriority,\n  remove,\n  setPriority,\n  push,\n  runTransaction,\n  child,\n  DataSnapshot as ModularDataSnapshot,\n  Query as ExpQuery,\n  DatabaseReference as ModularReference,\n  _QueryImpl,\n  _ReferenceImpl,\n  _validatePathString,\n  _validateWritablePath,\n  _UserCallback,\n  _QueryParams\n} from '@firebase/database';\nimport {\n  Compat,\n  Deferred,\n  errorPrefix,\n  validateArgCount,\n  validateCallback,\n  validateContextObject\n} from '@firebase/util';\n\nimport { warn } from '../util/util';\nimport { validateBoolean, validateEventType } from '../util/validation';\n\nimport { Database } from './Database';\nimport { OnDisconnect } from './onDisconnect';\nimport { TransactionResult } from './TransactionResult';\n\n/**\n * Class representing a firebase data snapshot.  It wraps a SnapshotNode and\n * surfaces the public methods (val, forEach, etc.) we want to expose.\n */\nexport class DataSnapshot implements Compat<ModularDataSnapshot> {\n  constructor(\n    readonly _database: Database,\n    readonly _delegate: ModularDataSnapshot\n  ) {}\n\n  /**\n   * Retrieves the snapshot contents as JSON.  Returns null if the snapshot is\n   * empty.\n   *\n   * @returns JSON representation of the DataSnapshot contents, or null if empty.\n   */\n  val(): unknown {\n    validateArgCount('DataSnapshot.val', 0, 0, arguments.length);\n    return this._delegate.val();\n  }\n\n  /**\n   * Returns the snapshot contents as JSON, including priorities of node.  Suitable for exporting\n   * the entire node contents.\n   * @returns JSON representation of the DataSnapshot contents, or null if empty.\n   */\n  exportVal(): unknown {\n    validateArgCount('DataSnapshot.exportVal', 0, 0, arguments.length);\n    return this._delegate.exportVal();\n  }\n\n  // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\n  // for end-users\n  toJSON(): unknown {\n    // Optional spacer argument is unnecessary because we're depending on recursion rather than stringifying the content\n    validateArgCount('DataSnapshot.toJSON', 0, 1, arguments.length);\n    return this._delegate.toJSON();\n  }\n\n  /**\n   * Returns whether the snapshot contains a non-null value.\n   *\n   * @returns Whether the snapshot contains a non-null value, or is empty.\n   */\n  exists(): boolean {\n    validateArgCount('DataSnapshot.exists', 0, 0, arguments.length);\n    return this._delegate.exists();\n  }\n\n  /**\n   * Returns a DataSnapshot of the specified child node's contents.\n   *\n   * @param path - Path to a child.\n   * @returns DataSnapshot for child node.\n   */\n  child(path: string): DataSnapshot {\n    validateArgCount('DataSnapshot.child', 0, 1, arguments.length);\n    // Ensure the childPath is a string (can be a number)\n    path = String(path);\n    _validatePathString('DataSnapshot.child', 'path', path, false);\n    return new DataSnapshot(this._database, this._delegate.child(path));\n  }\n\n  /**\n   * Returns whether the snapshot contains a child at the specified path.\n   *\n   * @param path - Path to a child.\n   * @returns Whether the child exists.\n   */\n  hasChild(path: string): boolean {\n    validateArgCount('DataSnapshot.hasChild', 1, 1, arguments.length);\n    _validatePathString('DataSnapshot.hasChild', 'path', path, false);\n    return this._delegate.hasChild(path);\n  }\n\n  /**\n   * Returns the priority of the object, or null if no priority was set.\n   *\n   * @returns The priority.\n   */\n  getPriority(): string | number | null {\n    validateArgCount('DataSnapshot.getPriority', 0, 0, arguments.length);\n    return this._delegate.priority;\n  }\n\n  /**\n   * Iterates through child nodes and calls the specified action for each one.\n   *\n   * @param action - Callback function to be called\n   * for each child.\n   * @returns True if forEach was canceled by action returning true for\n   * one of the child nodes.\n   */\n  forEach(action: (snapshot: IteratedDataSnapshot) => boolean | void): boolean {\n    validateArgCount('DataSnapshot.forEach', 1, 1, arguments.length);\n    validateCallback('DataSnapshot.forEach', 'action', action, false);\n    return this._delegate.forEach(expDataSnapshot =>\n      action(new DataSnapshot(this._database, expDataSnapshot))\n    );\n  }\n\n  /**\n   * Returns whether this DataSnapshot has children.\n   * @returns True if the DataSnapshot contains 1 or more child nodes.\n   */\n  hasChildren(): boolean {\n    validateArgCount('DataSnapshot.hasChildren', 0, 0, arguments.length);\n    return this._delegate.hasChildren();\n  }\n\n  get key() {\n    return this._delegate.key;\n  }\n\n  /**\n   * Returns the number of children for this DataSnapshot.\n   * @returns The number of children that this DataSnapshot contains.\n   */\n  numChildren(): number {\n    validateArgCount('DataSnapshot.numChildren', 0, 0, arguments.length);\n    return this._delegate.size;\n  }\n\n  /**\n   * @returns The Firebase reference for the location this snapshot's data came\n   * from.\n   */\n  getRef(): Reference {\n    validateArgCount('DataSnapshot.ref', 0, 0, arguments.length);\n    return new Reference(this._database, this._delegate.ref);\n  }\n\n  get ref(): Reference {\n    return this.getRef();\n  }\n}\n\n/**\n * Represents a child snapshot of a `Reference` that is being iterated over. The key will never be undefined.\n */\nexport interface IteratedDataSnapshot extends DataSnapshot {\n  key: string; // key of the location of this snapshot.\n}\n\nexport interface SnapshotCallback {\n  (dataSnapshot: DataSnapshot, previousChildName?: string | null): unknown;\n}\n\n/**\n * A Query represents a filter to be applied to a firebase location.  This object purely represents the\n * query expression (and exposes our public API to build the query).  The actual query logic is in ViewBase.js.\n *\n * Since every Firebase reference is a query, Firebase inherits from this object.\n */\nexport class Query implements Compat<ExpQuery> {\n  constructor(readonly database: Database, readonly _delegate: ExpQuery) {}\n\n  on(\n    eventType: string,\n    callback: SnapshotCallback,\n    cancelCallbackOrContext?: ((a: Error) => unknown) | object | null,\n    context?: object | null\n  ): SnapshotCallback {\n    validateArgCount('Query.on', 2, 4, arguments.length);\n    validateCallback('Query.on', 'callback', callback, false);\n\n    const ret = Query.getCancelAndContextArgs_(\n      'Query.on',\n      cancelCallbackOrContext,\n      context\n    );\n    const valueCallback = (expSnapshot, previousChildName?) => {\n      callback.call(\n        ret.context,\n        new DataSnapshot(this.database, expSnapshot),\n        previousChildName\n      );\n    };\n    valueCallback.userCallback = callback;\n    valueCallback.context = ret.context;\n    const cancelCallback = ret.cancel?.bind(ret.context);\n\n    switch (eventType) {\n      case 'value':\n        onValue(this._delegate, valueCallback, cancelCallback);\n        return callback;\n      case 'child_added':\n        onChildAdded(this._delegate, valueCallback, cancelCallback);\n        return callback;\n      case 'child_removed':\n        onChildRemoved(this._delegate, valueCallback, cancelCallback);\n        return callback;\n      case 'child_changed':\n        onChildChanged(this._delegate, valueCallback, cancelCallback);\n        return callback;\n      case 'child_moved':\n        onChildMoved(this._delegate, valueCallback, cancelCallback);\n        return callback;\n      default:\n        throw new Error(\n          errorPrefix('Query.on', 'eventType') +\n            'must be a valid event type = \"value\", \"child_added\", \"child_removed\", ' +\n            '\"child_changed\", or \"child_moved\".'\n        );\n    }\n  }\n\n  off(\n    eventType?: string,\n    callback?: SnapshotCallback,\n    context?: object | null\n  ): void {\n    validateArgCount('Query.off', 0, 3, arguments.length);\n    validateEventType('Query.off', eventType, true);\n    validateCallback('Query.off', 'callback', callback, true);\n    validateContextObject('Query.off', 'context', context, true);\n    if (callback) {\n      const valueCallback: _UserCallback = () => {};\n      valueCallback.userCallback = callback;\n      valueCallback.context = context;\n      off(this._delegate, eventType as EventType, valueCallback);\n    } else {\n      off(this._delegate, eventType as EventType | undefined);\n    }\n  }\n\n  /**\n   * Get the server-value for this query, or return a cached value if not connected.\n   */\n  get(): Promise<DataSnapshot> {\n    return get(this._delegate).then(expSnapshot => {\n      return new DataSnapshot(this.database, expSnapshot);\n    });\n  }\n\n  /**\n   * Attaches a listener, waits for the first event, and then removes the listener\n   */\n  once(\n    eventType: string,\n    callback?: SnapshotCallback,\n    failureCallbackOrContext?: ((a: Error) => void) | object | null,\n    context?: object | null\n  ): Promise<DataSnapshot> {\n    validateArgCount('Query.once', 1, 4, arguments.length);\n    validateCallback('Query.once', 'callback', callback, true);\n\n    const ret = Query.getCancelAndContextArgs_(\n      'Query.once',\n      failureCallbackOrContext,\n      context\n    );\n    const deferred = new Deferred<DataSnapshot>();\n    const valueCallback: _UserCallback = (expSnapshot, previousChildName?) => {\n      const result = new DataSnapshot(this.database, expSnapshot);\n      if (callback) {\n        callback.call(ret.context, result, previousChildName);\n      }\n      deferred.resolve(result);\n    };\n    valueCallback.userCallback = callback;\n    valueCallback.context = ret.context;\n    const cancelCallback = (error: Error) => {\n      if (ret.cancel) {\n        ret.cancel.call(ret.context, error);\n      }\n      deferred.reject(error);\n    };\n\n    switch (eventType) {\n      case 'value':\n        onValue(this._delegate, valueCallback, cancelCallback, {\n          onlyOnce: true\n        });\n        break;\n      case 'child_added':\n        onChildAdded(this._delegate, valueCallback, cancelCallback, {\n          onlyOnce: true\n        });\n        break;\n      case 'child_removed':\n        onChildRemoved(this._delegate, valueCallback, cancelCallback, {\n          onlyOnce: true\n        });\n        break;\n      case 'child_changed':\n        onChildChanged(this._delegate, valueCallback, cancelCallback, {\n          onlyOnce: true\n        });\n        break;\n      case 'child_moved':\n        onChildMoved(this._delegate, valueCallback, cancelCallback, {\n          onlyOnce: true\n        });\n        break;\n      default:\n        throw new Error(\n          errorPrefix('Query.once', 'eventType') +\n            'must be a valid event type = \"value\", \"child_added\", \"child_removed\", ' +\n            '\"child_changed\", or \"child_moved\".'\n        );\n    }\n\n    return deferred.promise;\n  }\n\n  /**\n   * Set a limit and anchor it to the start of the window.\n   */\n  limitToFirst(limit: number): Query {\n    validateArgCount('Query.limitToFirst', 1, 1, arguments.length);\n    return new Query(this.database, query(this._delegate, limitToFirst(limit)));\n  }\n\n  /**\n   * Set a limit and anchor it to the end of the window.\n   */\n  limitToLast(limit: number): Query {\n    validateArgCount('Query.limitToLast', 1, 1, arguments.length);\n    return new Query(this.database, query(this._delegate, limitToLast(limit)));\n  }\n\n  /**\n   * Given a child path, return a new query ordered by the specified grandchild path.\n   */\n  orderByChild(path: string): Query {\n    validateArgCount('Query.orderByChild', 1, 1, arguments.length);\n    return new Query(this.database, query(this._delegate, orderByChild(path)));\n  }\n\n  /**\n   * Return a new query ordered by the KeyIndex\n   */\n  orderByKey(): Query {\n    validateArgCount('Query.orderByKey', 0, 0, arguments.length);\n    return new Query(this.database, query(this._delegate, orderByKey()));\n  }\n\n  /**\n   * Return a new query ordered by the PriorityIndex\n   */\n  orderByPriority(): Query {\n    validateArgCount('Query.orderByPriority', 0, 0, arguments.length);\n    return new Query(this.database, query(this._delegate, orderByPriority()));\n  }\n\n  /**\n   * Return a new query ordered by the ValueIndex\n   */\n  orderByValue(): Query {\n    validateArgCount('Query.orderByValue', 0, 0, arguments.length);\n    return new Query(this.database, query(this._delegate, orderByValue()));\n  }\n\n  startAt(\n    value: number | string | boolean | null = null,\n    name?: string | null\n  ): Query {\n    validateArgCount('Query.startAt', 0, 2, arguments.length);\n    return new Query(\n      this.database,\n      query(this._delegate, startAt(value, name))\n    );\n  }\n\n  startAfter(\n    value: number | string | boolean | null = null,\n    name?: string | null\n  ): Query {\n    validateArgCount('Query.startAfter', 0, 2, arguments.length);\n    return new Query(\n      this.database,\n      query(this._delegate, startAfter(value, name))\n    );\n  }\n\n  endAt(\n    value: number | string | boolean | null = null,\n    name?: string | null\n  ): Query {\n    validateArgCount('Query.endAt', 0, 2, arguments.length);\n    return new Query(this.database, query(this._delegate, endAt(value, name)));\n  }\n\n  endBefore(\n    value: number | string | boolean | null = null,\n    name?: string | null\n  ): Query {\n    validateArgCount('Query.endBefore', 0, 2, arguments.length);\n    return new Query(\n      this.database,\n      query(this._delegate, endBefore(value, name))\n    );\n  }\n\n  /**\n   * Load the selection of children with exactly the specified value, and, optionally,\n   * the specified name.\n   */\n  equalTo(value: number | string | boolean | null, name?: string) {\n    validateArgCount('Query.equalTo', 1, 2, arguments.length);\n    return new Query(\n      this.database,\n      query(this._delegate, equalTo(value, name))\n    );\n  }\n\n  /**\n   * @returns URL for this location.\n   */\n  toString(): string {\n    validateArgCount('Query.toString', 0, 0, arguments.length);\n    return this._delegate.toString();\n  }\n\n  // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\n  // for end-users.\n  toJSON() {\n    // An optional spacer argument is unnecessary for a string.\n    validateArgCount('Query.toJSON', 0, 1, arguments.length);\n    return this._delegate.toJSON();\n  }\n\n  /**\n   * Return true if this query and the provided query are equivalent; otherwise, return false.\n   */\n  isEqual(other: Query): boolean {\n    validateArgCount('Query.isEqual', 1, 1, arguments.length);\n    if (!(other instanceof Query)) {\n      const error =\n        'Query.isEqual failed: First argument must be an instance of firebase.database.Query.';\n      throw new Error(error);\n    }\n    return this._delegate.isEqual(other._delegate);\n  }\n\n  /**\n   * Helper used by .on and .once to extract the context and or cancel arguments.\n   * @param fnName - The function name (on or once)\n   *\n   */\n  private static getCancelAndContextArgs_(\n    fnName: string,\n    cancelOrContext?: ((a: Error) => void) | object | null,\n    context?: object | null\n  ): { cancel: ((a: Error) => void) | undefined; context: object | undefined } {\n    const ret: {\n      cancel: ((a: Error) => void) | null;\n      context: object | null;\n    } = { cancel: undefined, context: undefined };\n    if (cancelOrContext && context) {\n      ret.cancel = cancelOrContext as (a: Error) => void;\n      validateCallback(fnName, 'cancel', ret.cancel, true);\n\n      ret.context = context;\n      validateContextObject(fnName, 'context', ret.context, true);\n    } else if (cancelOrContext) {\n      // we have either a cancel callback or a context.\n      if (typeof cancelOrContext === 'object' && cancelOrContext !== null) {\n        // it's a context!\n        ret.context = cancelOrContext;\n      } else if (typeof cancelOrContext === 'function') {\n        ret.cancel = cancelOrContext as (a: Error) => void;\n      } else {\n        throw new Error(\n          errorPrefix(fnName, 'cancelOrContext') +\n            ' must either be a cancel callback or a context object.'\n        );\n      }\n    }\n    return ret;\n  }\n\n  get ref(): Reference {\n    return new Reference(\n      this.database,\n      new _ReferenceImpl(this._delegate._repo, this._delegate._path)\n    );\n  }\n}\n\nexport class Reference extends Query implements Compat<ModularReference> {\n  then: Promise<Reference>['then'];\n  catch: Promise<Reference>['catch'];\n\n  /**\n   * Call options:\n   *   new Reference(Repo, Path) or\n   *   new Reference(url: string, string|RepoManager)\n   *\n   * Externally - this is the firebase.database.Reference type.\n   */\n  constructor(\n    readonly database: Database,\n    readonly _delegate: ModularReference\n  ) {\n    super(\n      database,\n      new _QueryImpl(\n        _delegate._repo,\n        _delegate._path,\n        new _QueryParams(),\n        false\n      )\n    );\n  }\n\n  /** @returns {?string} */\n  getKey(): string | null {\n    validateArgCount('Reference.key', 0, 0, arguments.length);\n    return this._delegate.key;\n  }\n\n  child(pathString: string): Reference {\n    validateArgCount('Reference.child', 1, 1, arguments.length);\n    if (typeof pathString === 'number') {\n      pathString = String(pathString);\n    }\n    return new Reference(this.database, child(this._delegate, pathString));\n  }\n\n  /** @returns {?Reference} */\n  getParent(): Reference | null {\n    validateArgCount('Reference.parent', 0, 0, arguments.length);\n    const parent = this._delegate.parent;\n    return parent ? new Reference(this.database, parent) : null;\n  }\n\n  /** @returns {!Reference} */\n  getRoot(): Reference {\n    validateArgCount('Reference.root', 0, 0, arguments.length);\n    return new Reference(this.database, this._delegate.root);\n  }\n\n  set(\n    newVal: unknown,\n    onComplete?: (error: Error | null) => void\n  ): Promise<void> {\n    validateArgCount('Reference.set', 1, 2, arguments.length);\n    validateCallback('Reference.set', 'onComplete', onComplete, true);\n    const result = set(this._delegate, newVal);\n    if (onComplete) {\n      result.then(\n        () => onComplete(null),\n        error => onComplete(error)\n      );\n    }\n    return result;\n  }\n\n  update(\n    values: object,\n    onComplete?: (a: Error | null) => void\n  ): Promise<void> {\n    validateArgCount('Reference.update', 1, 2, arguments.length);\n\n    if (Array.isArray(values)) {\n      const newObjectToMerge: { [k: string]: unknown } = {};\n      for (let i = 0; i < values.length; ++i) {\n        newObjectToMerge['' + i] = values[i];\n      }\n      values = newObjectToMerge;\n      warn(\n        'Passing an Array to Firebase.update() is deprecated. ' +\n          'Use set() if you want to overwrite the existing data, or ' +\n          'an Object with integer keys if you really do want to ' +\n          'only update some of the children.'\n      );\n    }\n    _validateWritablePath('Reference.update', this._delegate._path);\n    validateCallback('Reference.update', 'onComplete', onComplete, true);\n\n    const result = update(this._delegate, values);\n    if (onComplete) {\n      result.then(\n        () => onComplete(null),\n        error => onComplete(error)\n      );\n    }\n    return result;\n  }\n\n  setWithPriority(\n    newVal: unknown,\n    newPriority: string | number | null,\n    onComplete?: (a: Error | null) => void\n  ): Promise<void> {\n    validateArgCount('Reference.setWithPriority', 2, 3, arguments.length);\n    validateCallback(\n      'Reference.setWithPriority',\n      'onComplete',\n      onComplete,\n      true\n    );\n\n    const result = setWithPriority(this._delegate, newVal, newPriority);\n    if (onComplete) {\n      result.then(\n        () => onComplete(null),\n        error => onComplete(error)\n      );\n    }\n    return result;\n  }\n\n  remove(onComplete?: (a: Error | null) => void): Promise<void> {\n    validateArgCount('Reference.remove', 0, 1, arguments.length);\n    validateCallback('Reference.remove', 'onComplete', onComplete, true);\n\n    const result = remove(this._delegate);\n    if (onComplete) {\n      result.then(\n        () => onComplete(null),\n        error => onComplete(error)\n      );\n    }\n    return result;\n  }\n\n  transaction(\n    transactionUpdate: (currentData: unknown) => unknown,\n    onComplete?: (\n      error: Error | null,\n      committed: boolean,\n      dataSnapshot: DataSnapshot | null\n    ) => void,\n    applyLocally?: boolean\n  ): Promise<TransactionResult> {\n    validateArgCount('Reference.transaction', 1, 3, arguments.length);\n    validateCallback(\n      'Reference.transaction',\n      'transactionUpdate',\n      transactionUpdate,\n      false\n    );\n    validateCallback('Reference.transaction', 'onComplete', onComplete, true);\n    validateBoolean(\n      'Reference.transaction',\n      'applyLocally',\n      applyLocally,\n      true\n    );\n\n    const result = runTransaction(this._delegate, transactionUpdate, {\n      applyLocally\n    }).then(\n      transactionResult =>\n        new TransactionResult(\n          transactionResult.committed,\n          new DataSnapshot(this.database, transactionResult.snapshot)\n        )\n    );\n    if (onComplete) {\n      result.then(\n        transactionResult =>\n          onComplete(\n            null,\n            transactionResult.committed,\n            transactionResult.snapshot\n          ),\n        error => onComplete(error, false, null)\n      );\n    }\n    return result;\n  }\n\n  setPriority(\n    priority: string | number | null,\n    onComplete?: (a: Error | null) => void\n  ): Promise<void> {\n    validateArgCount('Reference.setPriority', 1, 2, arguments.length);\n    validateCallback('Reference.setPriority', 'onComplete', onComplete, true);\n\n    const result = setPriority(this._delegate, priority);\n    if (onComplete) {\n      result.then(\n        () => onComplete(null),\n        error => onComplete(error)\n      );\n    }\n    return result;\n  }\n\n  push(value?: unknown, onComplete?: (a: Error | null) => void): Reference {\n    validateArgCount('Reference.push', 0, 2, arguments.length);\n    validateCallback('Reference.push', 'onComplete', onComplete, true);\n\n    const expPromise = push(this._delegate, value);\n    const promise = expPromise.then(\n      expRef => new Reference(this.database, expRef)\n    );\n\n    if (onComplete) {\n      promise.then(\n        () => onComplete(null),\n        error => onComplete(error)\n      );\n    }\n\n    const result = new Reference(this.database, expPromise);\n    result.then = promise.then.bind(promise);\n    result.catch = promise.catch.bind(promise, undefined);\n    return result;\n  }\n\n  onDisconnect(): OnDisconnect {\n    _validateWritablePath('Reference.onDisconnect', this._delegate._path);\n    return new OnDisconnect(\n      new ModularOnDisconnect(this._delegate._repo, this._delegate._path)\n    );\n  }\n\n  get key(): string | null {\n    return this.getKey();\n  }\n\n  get parent(): Reference | null {\n    return this.getParent();\n  }\n\n  get root(): Reference {\n    return this.getRoot();\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// eslint-disable-next-line import/no-extraneous-dependencies\n\nimport { FirebaseApp } from '@firebase/app-types';\nimport { FirebaseService } from '@firebase/app-types/private';\nimport {\n  forceLongPolling,\n  forceWebSockets,\n  goOnline,\n  connectDatabaseEmulator,\n  goOffline,\n  ref,\n  refFromURL,\n  increment,\n  serverTimestamp,\n  Database as ModularDatabase\n} from '@firebase/database';\nimport {\n  validateArgCount,\n  Compat,\n  EmulatorMockTokenOptions\n} from '@firebase/util';\n\nimport { Reference } from './Reference';\n\n/**\n * Class representing a firebase database.\n */\nexport class Database implements FirebaseService, Compat<ModularDatabase> {\n  static readonly ServerValue = {\n    TIMESTAMP: serverTimestamp(),\n    increment: (delta: number) => increment(delta)\n  };\n\n  /**\n   * The constructor should not be called by users of our public API.\n   */\n  constructor(readonly _delegate: ModularDatabase, readonly app: FirebaseApp) {}\n\n  INTERNAL = {\n    delete: () => this._delegate._delete(),\n    forceWebSockets,\n    forceLongPolling\n  };\n\n  /**\n   * Modify this instance to communicate with the Realtime Database emulator.\n   *\n   * <p>Note: This method must be called before performing any other operation.\n   *\n   * @param host - the emulator host (ex: localhost)\n   * @param port - the emulator port (ex: 8080)\n   * @param options.mockUserToken - the mock auth token to use for unit testing Security Rules\n   */\n  useEmulator(\n    host: string,\n    port: number,\n    options: {\n      mockUserToken?: EmulatorMockTokenOptions;\n    } = {}\n  ): void {\n    connectDatabaseEmulator(this._delegate, host, port, options);\n  }\n\n  /**\n   * Returns a reference to the root or to the path specified in the provided\n   * argument.\n   *\n   * @param path - The relative string path or an existing Reference to a database\n   * location.\n   * @throws If a Reference is provided, throws if it does not belong to the\n   * same project.\n   * @returns Firebase reference.\n   */\n  ref(path?: string): Reference;\n  ref(path?: Reference): Reference;\n  ref(path?: string | Reference): Reference {\n    validateArgCount('database.ref', 0, 1, arguments.length);\n    if (path instanceof Reference) {\n      const childRef = refFromURL(this._delegate, path.toString());\n      return new Reference(this, childRef);\n    } else {\n      const childRef = ref(this._delegate, path);\n      return new Reference(this, childRef);\n    }\n  }\n\n  /**\n   * Returns a reference to the root or the path specified in url.\n   * We throw a exception if the url is not in the same domain as the\n   * current repo.\n   * @returns Firebase reference.\n   */\n  refFromURL(url: string): Reference {\n    const apiName = 'database.refFromURL';\n    validateArgCount(apiName, 1, 1, arguments.length);\n    const childRef = refFromURL(this._delegate, url);\n    return new Reference(this, childRef);\n  }\n\n  // Make individual repo go offline.\n  goOffline(): void {\n    validateArgCount('database.goOffline', 0, 0, arguments.length);\n    return goOffline(this._delegate);\n  }\n\n  goOnline(): void {\n    validateArgCount('database.goOnline', 0, 0, arguments.length);\n    return goOnline(this._delegate);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  AppCheckInternalComponentName,\n  FirebaseAppCheckInternal\n} from '@firebase/app-check-interop-types';\nimport { FirebaseApp } from '@firebase/app-types';\nimport {\n  FirebaseAuthInternal,\n  FirebaseAuthInternalName\n} from '@firebase/auth-interop-types';\nimport {\n  Component,\n  ComponentContainer,\n  ComponentType,\n  Provider\n} from '@firebase/component';\nimport {\n  _repoManagerDatabaseFromApp,\n  _setSDKVersion\n} from '@firebase/database';\nimport * as types from '@firebase/database-types';\n\nimport { Database } from './Database';\n\n/**\n * Used by console to create a database based on the app,\n * passed database URL and a custom auth implementation.\n *\n * @param app - A valid FirebaseApp-like object\n * @param url - A valid Firebase databaseURL\n * @param version - custom version e.g. firebase-admin version\n * @param customAuthImpl - custom auth implementation\n */\nexport function initStandalone<T>({\n  app,\n  url,\n  version,\n  customAuthImpl,\n  customAppCheckImpl,\n  namespace,\n  nodeAdmin = false\n}: {\n  app: FirebaseApp;\n  url: string;\n  version: string;\n  customAuthImpl: FirebaseAuthInternal;\n  customAppCheckImpl?: FirebaseAppCheckInternal;\n  namespace: T;\n  nodeAdmin?: boolean;\n}): {\n  instance: types.Database;\n  namespace: T;\n} {\n  _setSDKVersion(version);\n\n  const container = new ComponentContainer('database-standalone');\n  /**\n   * ComponentContainer('database-standalone') is just a placeholder that doesn't perform\n   * any actual function.\n   */\n  const authProvider = new Provider<FirebaseAuthInternalName>(\n    'auth-internal',\n    container\n  );\n  authProvider.setComponent(\n    new Component('auth-internal', () => customAuthImpl, ComponentType.PRIVATE)\n  );\n\n  let appCheckProvider: Provider<AppCheckInternalComponentName> = undefined;\n  if (customAppCheckImpl) {\n    appCheckProvider = new Provider<AppCheckInternalComponentName>(\n      'app-check-internal',\n      container\n    );\n    appCheckProvider.setComponent(\n      new Component(\n        'app-check-internal',\n        () => customAppCheckImpl,\n        ComponentType.PRIVATE\n      )\n    );\n  }\n\n  return {\n    instance: new Database(\n      _repoManagerDatabaseFromApp(\n        app,\n        authProvider,\n        appCheckProvider,\n        url,\n        nodeAdmin\n      ),\n      app\n    ) as types.Database,\n    namespace\n  };\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport firebase, { FirebaseNamespace } from '@firebase/app-compat';\nimport { _FirebaseNamespace } from '@firebase/app-types/private';\nimport { Component, ComponentType } from '@firebase/component';\nimport { enableLogging } from '@firebase/database';\nimport * as types from '@firebase/database-types';\n\nimport { name, version } from '../package.json';\nimport { Database } from '../src/api/Database';\nimport * as INTERNAL from '../src/api/internal';\nimport { DataSnapshot, Query, Reference } from '../src/api/Reference';\n\nconst ServerValue = Database.ServerValue;\n\nexport function registerDatabase(instance: FirebaseNamespace) {\n  // Register the Database Service with the 'firebase' namespace.\n  (instance as unknown as _FirebaseNamespace).INTERNAL.registerComponent(\n    new Component(\n      'database-compat',\n      (container, { instanceIdentifier: url }) => {\n        /* Dependencies */\n        // getImmediate for FirebaseApp will always succeed\n        const app = container.getProvider('app-compat').getImmediate();\n        const databaseExp = container\n          .getProvider('database')\n          .getImmediate({ identifier: url });\n        return new Database(databaseExp, app);\n      },\n      ComponentType.PUBLIC\n    )\n      .setServiceProps(\n        // firebase.database namespace properties\n        {\n          Reference,\n          Query,\n          Database,\n          DataSnapshot,\n          enableLogging,\n          INTERNAL,\n          ServerValue\n        }\n      )\n      .setMultipleInstances(true)\n  );\n\n  instance.registerVersion(name, version);\n}\n\nregisterDatabase(firebase);\n\ndeclare module '@firebase/app-compat' {\n  interface FirebaseNamespace {\n    database?: {\n      (app?: FirebaseApp): types.FirebaseDatabase;\n      enableLogging: typeof types.enableLogging;\n      ServerValue: types.ServerValue;\n      Database: typeof types.FirebaseDatabase;\n    };\n  }\n  interface FirebaseApp {\n    database?(databaseURL?: string): types.FirebaseDatabase;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}